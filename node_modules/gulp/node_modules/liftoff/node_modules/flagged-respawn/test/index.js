const expect = require('chai').expect;
const exec = require('child_process').exec;

const reorder = require('../lib/reorder');
const flaggedRespawn = require('../');

describe('flaggedRespawn', function () {
  var flags = ['--harmony', '--use_strict', '--stack_size']

  describe('reorder', function () {

    it('should re-order args, placing special flags first', function () {
      var needsRespawn = ['node', 'file.js', '--flag', '--harmony', 'command'];
      var noRespawnNeeded = ['node', 'bin/flagged-respawn', 'thing'];
      expect(reorder(flags, needsRespawn))
        .to.deep.equal(['node', '--harmony', 'file.js', '--flag', 'command']);
      expect(reorder(flags, noRespawnNeeded))
        .to.deep.equal(noRespawnNeeded);
    });

    it('should keep flags values when not placed first', function () {
      var args = ['node', 'file.js', '--stack_size=2048'];
      var expected = ['node', '--stack_size=2048', 'file.js'];
      expect(reorder(flags, args)).to.deep.equal(expected);
    });

    it('should